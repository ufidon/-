/* Terence Parr提取的一个C语言子集
测：
antlr4 子C.g4
javac *.java
grun 子C 档 -gui < 测试.c
*/
grammar 子C;

档:   (函宣 | 量宣)+ ;

量宣
    :   型 M名 ('=' 式)? ';'
    ;
型:   '浮型' | '整型' | '贰型' | '空型' ; // 变量类型

函宣
    :   型 M名 '(' 形参集? ')' 块 // "整型 加一(整型 甲) {...}"
    ;
形参集
    :   形参 (',' 形参)*
    ;
形参
    :   型 M名
    ;

块:  '{' 句* '}' ;   // 块可空
句:   块
    |   量宣
    |   '若' 式 '则' 句 ('否' 句)?
    |   '返' 式? ';' 
    |   式 '=' 式 ';' // 赋值句
    |   式 ';'          // 调函句
    ;

式:   M名 '(' 式列? ')'    #调函式
    |   M名 '[' 式 ']'     #号式
    |   '-' 式            #负式
    |   '!' 式             #非式
    |   式 '*' 式           #乘式
    |   式 ('+'|'-') 式     #加减式
    |   式 '==' 式          #等式
    |   M名                 #变量式
    |   Z整数               #整数
    |   '(' 式 ')'          #括式
    |   '真'                #真值
    |   '假'                #假值
    ;
式列 : 式 (',' 式)* ;   // 参列

M名  :   Z字 (Z字 | [0-9])* ;
fragment
Z字 : [a-zA-Z\u2e80-\u9fff] ;

Z整数 :   [0-9]+ ;

K空格  :   [ \t\n\r]+ -> skip ;

H行注释
    :   '//' .*? '\n' -> skip
    ;